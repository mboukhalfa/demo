
events {

  worker_connections  4096;  ## Default: 1024

}

http {

    # reserve 1MB under the name 'proxied' to track uploads
    upload_progress proxied 1m;

    server {

        client_max_body_size 1000m;
        listen       80;

        location / {

            proxy_pass   http://localhost:8000;
            
        }

        # Upload form should be submitted to this location
        location = /upload/ {

            auth_request /upload/auth;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,uuid';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            # Pass altered request body to this location
            upload_pass   @test;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /tmp;

            # Allow uploaded files to be read only by user
            upload_store_access  user:rw group:rw all:r;

            # Set specified fields in request body
            upload_set_form_field $upload_field_name.name "$upload_file_name";
            upload_set_form_field $upload_field_name.content_type "$upload_content_type";
            upload_set_form_field $upload_field_name.path "$upload_tmp_path";

            # Inform backend about hash and size of a file
            upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
            upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

            upload_pass_form_field "^submit$|^description$";
            upload_pass_form_field "uuid";

            upload_cleanup 400 403 404 499 500-505;
            track_uploads proxied 30s;
        }

        # Pass altered request body to a backend
        location @test {

            proxy_pass   http://localhost:8000;

        }

        location ^~ /progress {

            if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "origin, authorization, accept, X-Progress-ID";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            add_header Access-Control-Allow-Origin *;
            add_header 'Access-Control-Allow-Credentials' 'true';
            upload_progress_json_output;
            report_uploads proxied;
        }

        location = /upload/auth {
            internal;
            proxy_pass http://localhost:8000;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-METHOD $request_method;
        }

    }

}
